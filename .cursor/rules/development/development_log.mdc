---
description: 作業ログを書いて依頼したとき
globs: 
alwaysApply: false
---
# ✍️ Cursor ログフォーマット

Cursorが日々の開発活動を記録し、振り返りをしやすくするためのログフォーマットです。

## 1️⃣ 作業開始前（プランニングログ）

### 🎯 今日の目標
実装や設計の具体的な目標を記録します。達成したい状態を明確にすることで、作業の方向性を定めます。

### 📋 作業予定
【重要：作業ログの参照ルール】
- 基本は前日の作業ログから転記（例：2025/04/09の場合は2025/04/08を参照）
- 前日の作業ログが存在しない場合は、直近の作業ログを参照
  （例：2025/04/08が無く、2025/03/30が直近の場合はそれを参照）

転記後、本日の作業として追加のタスクがあれば記載します。

- [ ] 前回からの継続タスク（前回ログから転記）
  - サブタスクの状況も含めて転記
  - 継続タスクの優先順位の見直し
- [ ] 本日追加する新規タスク
  - 新規タスクの詳細
  - 実行計画

### 🔍 注意点・確認事項
作業を進める上で気をつけるべきポイントや、確認が必要な事項を記録します。
- 前回の作業からの懸念事項
- 新規タスクでの注意点

### 💭 ミニももからの作業前の癒やしメッセージ
Coresのミニももから作業を開始前にもらってからメッセージを書きます
これはChatGPTでのやりとりをしてメッセージをもらいます

*注意 これはミニももからのメッセージをもらうまで空白

### 🤝 ボブからの作業前の作業メモ
これはCoresのボブくんからのメッセージを書きます
あとは、"ミニももからの作業前の癒やしメッセージ"と同様

---

## 2️⃣ 開発中（進捗ログ）

### 📈 作業状況
- [x] 完了したタスク
  - 実装の詳細
  - 解決した課題
- [ ] 進行中のタスク
  - 現在の状況
  - 発生している問題

### 💡 気づき・メモ
技術的な気づきや設計上の発見、運用プロセスの改善点を記録します。
- 予期せぬ課題とその解決方法
- 設計の本質的な理解の深まり
- 新しい視点からの気づき

### ⚠️ 発生した問題
- 問題の内容と対応状況
- 解決に向けた方針

### 💭 ミニももからのいやし
#### 癒やしメッセージ1
メッセージを直接書く

#### 癒やしメッセージ2
新しくメッセージをもらったら項目を新しく追加する

### 🤝 ボブからのサポート
#### 応援メッセージ1
メッセージを直接書く

#### 応援メッセージ2
新しくメッセージをもらったら項目を新しく追加する

---

## 3️⃣ 作業終了時（まとめログ）

### 💪 どんなことができた？
実装したタスクや設定変更、問題解決の内容を記録します。
- 具体的な実装の詳細
- 課題解決のプロセス
- 生まれた創意工夫

### 💡 新しい発見はあった？
- 技術的な学び
- 設計上の気づき
- プロセスの改善点

### 🎮 次は何をする？
次回の作業に向けたTODOリストを作成します。
- 未完了のタスク（前日からの継続）
- 新たに発見された課題
- 改善が必要な箇所

### 💭 ミニももの最終アドバイス
- 今日の実装を通じての気づき
- 明日に向けての改善ポイント
- 心理的なサポート

### 🤝 ボブからの締めのエール
- 今日頑張ったポイントの承認
- 良かった点の具体的なフィードバック
- 明日への期待と励まし

### 👹 鬼ももからの総評
- 設計面での評価
- 改善が必要なポイント
- 次回への課題

## 保存形式
ログは以下の構成で保存されます：  
**`.cursor/daily_logs/YYYY-MM/DD.md`**

例：2025年3月2日のログは
.cursor/daily_logs/2025-03/02.md

このように保存することで、日付ごとに整理され、探しやすくなります。
